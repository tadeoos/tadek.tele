<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Kubona</title><link>http://tadek.tele.com.pl/</link><description></description><lastBuildDate>Tue, 11 Jul 2017 10:20:00 +0200</lastBuildDate><item><title>Introducing: epygone</title><link>http://tadek.tele.com.pl/epygone-pt1.html</link><description>&lt;!-- Status: draft --&gt;

&lt;p&gt;Around a year ago I got creative with one of homework assignments from a Linguistic Engineeirng course I was taking and developed a simple text generator who recently became the Epygone, which you can now play with yourself &lt;a href="/epygone"&gt;here&lt;/a&gt;. I plan on doing two part series on this project. First one, which you are currently reading, is more general and describes the way in which Epygone imitates different books. The second one (currently in writing) is going to be more technical and dive a bit into NLTK, Flask and probably some deployment stuff like Docker and Ansible. &lt;/p&gt;
&lt;h4&gt;How does it work?&lt;/h4&gt;
&lt;p&gt;Lets start with a bulletpoint overview and discuss the details later.
&lt;!-- I consider Epygone to be a very naive epigone. Here's why: --&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Epygone starts by consuming a &lt;code&gt;.txt&lt;/code&gt; file, (ideally less than 500 kilobytes in size). &lt;/li&gt;
&lt;li&gt;He then generates a conditional frequency distribution based on text's trigrams. What it means is that he can now obtain an information that after …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tadek Teleżyński</dc:creator><pubDate>Tue, 11 Jul 2017 10:20:00 +0200</pubDate><guid isPermaLink="false">tag:tadek.tele.com.pl,2017-07-11:/epygone-pt1.html</guid><category>python</category><category>nltk</category><category>web</category></item><item><title>HOWTO listen to a Discover Weekly playlist? (the lazy way)</title><link>http://tadek.tele.com.pl/howto-sdw.html</link><description>&lt;p&gt;I listen to music a lot and have no problem with obsessing over one song that catches my ear for days. Nonetheless it's good to have some "movement in the business" as we Poles like to say, and since I've never managed to develop any structured or habitual way to go about this, I am a big fan of &lt;a href="https://www.spotify.com/"&gt;Spotify's&lt;/a&gt; Discover Weekly playlist.&lt;/p&gt;
&lt;p&gt;If you don't know what I'm talking about, two remarks are in order.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Congratulations on your information diet.&lt;/li&gt;
&lt;li&gt;It's a recommendation service that every Monday morning puts up a playlist consisting of 30 "songs that you may like".&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While we're on the subject — it &lt;a href="https://thenextweb.com/apps/2016/10/25/spotify-discover-boring/"&gt;seems&lt;/a&gt; &lt;a href="http://www.vogue.com/article/spotify-discover-weekly-genius"&gt;to work&lt;/a&gt; &lt;a href="http://www.adweek.com/digital/even-spotify-surprised-huge-success-its-discover-weekly-playlists-173129/"&gt;surprisingly&lt;/a&gt; &lt;a href="https://www.reddit.com/r/spotify/comments/5o1531/i_love_discover_weekly/"&gt;well&lt;/a&gt;&lt;sup id="sf-howto-sdw-1-back"&gt;&lt;a href="#sf-howto-sdw-1" title="I'd guess that on average I find around two new &amp;quot;songs that I like&amp;quot; every week. Two out of thirty doesn't sound good, but it is a lot in the machine learning business." class="simple-footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; and if you want to know more about the magic behind it, you can check out &lt;a href="https://qz.com/571007/the-magic-that-makes-spotifys-discover-weekly-playlists-so-damn-good/"&gt;this article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But let's go back to our story. &lt;/p&gt;
&lt;p&gt;So, one October Monday evening I was sitting in a bus, coming …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tadek Teleżyński</dc:creator><pubDate>Mon, 20 Feb 2017 10:20:00 +0100</pubDate><guid isPermaLink="false">tag:tadek.tele.com.pl,2017-02-20:/howto-sdw.html</guid><category>tutorial</category><category>spotify</category><category>probability</category></item></channel></rss>